heat_template_version: 2021-04-16
description: >
  This template demonstrates the different ways configuration resources
  can be used to specify boot-time cloud-init configuration.

  
resources:
  demo_net:
    type: OS::Neutron::Net
    properties:
      name: publicsub

  demo_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: demo_net }
      cidr: 172.24.6.0/24 
      gateway_ip: 172.24.6.1
      allocation_pools:
        - start: 172.24.6.10
          end: 172.24.6.200
          
  demo_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: public

  one_init:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        write_files:
        - path: /tmp/one
          content: "The one is bar"

  five_init:
    # this resource demonstrates multiple cloud-config resources
    # with a merge_how strategy
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        merge_how: 'dict(recurse_array,no_replace)+list(append)'
        write_files:
        - path: /tmp/five
          content: "The five is bar"

  two_init:
    # this resource is a simple shell script. No inputs or outputs are
    # specified since this is not supported by cloud-init but values
    # could be inserted into the script using str_replace.
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        #!/bin/sh
        echo "The two is bar" > /tmp/two

  three_init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        #!/bin/sh
        echo "The three is bar" > /tmp/three

  four_init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        #!/bin/sh
        echo "The four is bar" > /tmp/four

  three_four_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: three_init}
      - config: {get_resource: four_init}

  server_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: one_init}
      - config: {get_resource: two_init}
        # referencing another OS::Heat::MultipartMime resource will result
        # in each part of that resource being appended to this one.
      - config: {get_resource: three_four_init}
        type: multipart
      - config: {get_resource: five_init}

  demo_key:
    type: OS::Nova::KeyPair
    properties:
      name: test-key2

  server:
    type: OS::Nova::Server
    properties:
      image: ubuntu_basic
      flavor: ds512M
      key_name: { get_resource: demo_key }

      user_data_format: RAW
      user_data:
        get_resource: server_init
      networks:
        - port: { get_resource: server_port }

  server_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: demo_net }
      fixed_ips:
        - subnet_id: { get_resource: demo_subnet }

